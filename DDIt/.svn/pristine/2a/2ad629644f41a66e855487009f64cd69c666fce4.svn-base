/**
 * 
 */
const cPath = document.body.dataset.contextPath;
let insertBtn= document.querySelector("#insertBtn");
let sulmoonInsertModal = document.querySelector("#sulmoonInsertModal");
let qustnrInsertBtn = document.querySelector("#qustnrInsertBtn");
let qustnrForm = document.querySelector("#qustnrForm");
let classCodeTag = document.querySelector("#classCode");
// 설문대상자 나오는 리스트 폼
let selectList = document.querySelector("#selectList");
// 설문대상자 닫기 버튼
let closeSelecter = document.querySelector("#closeSelecter");
// 설문대상자 모달
let selectModal = document.querySelector("#error-modal");
// 설문 대상자 리스트 나오는 tbody
let tbody = document.querySelector("#table-contact-body");
// 설문대상자 선택된 사람들 넣어줄 인풋태그
let users = document.querySelector("#users");
// 설문대상자 추가될 유저아이디값들
let userIds=[];
// 설문디테일 모달
let sulmoonDetailModal = document.querySelector("#sulmoonDetailModal");

// 설문답변유형 처음부터 나오게하는 함수
surveyAnswer(document.querySelector("[name='answerType']"));

// 설문 디테일 모달 열릴때
function sulmoonDetailModalOpen(qusNo){
	sulmoonDetailModal.style.display="block";
}

// 전체선택하는 함수
function selectAll(selectAll){
	let checkbox = document.querySelectorAll('input[type="checkbox"]');
	checkbox.forEach(checkbox=>{
		checkbox.checked = selectAll.checked;
	})
}

// 설문대상자 모달 닫기버튼눌렀을떄
selectModal.addEventListener('hidden.bs.modal', function () {
	// 선택된것들 다 취소
	selectList.reset();
	console.log("취소된후 값",userIds);
});

// 설문대상자 추가버튼 눌렀을떄
function addSelecter(){
	userIds=[];
	// 리스트 안에 name=userId 인 체크박스의 체크를 확인하고 
	let userCheckBoxs = tbody.querySelectorAll('input[name="userId"]');
	userCheckBoxs.forEach(checkbox=>{
		if(checkbox.checked){
			// 체크가 되있으면 그다음 형제요소의 벨류값을 가져온다.
			let userId = checkbox.nextElementSibling.value;
			// 벨류값을 배열에다 담아둔다.
			userIds.push(userId);
			console.log("userIds",userIds);
			console.log("userIds.length",userIds.length);
			
		}
		
	})
	for(var i=0;i<userIds.length;i++){
		let inputTag = document.createElement("input");
		inputTag.type="hidden";
		inputTag.name="users";
		inputTag.value=userIds[i];
		qustnrForm.appendChild(inputTag);
	}
	closeSelecter.click();
}

// 설문등록 모달창 보여주기
insertBtn.addEventListener("click",function(){
	sulmoonInsertModal.style.display="block";
})
// 설문등록 모달창 닫기
function cancelModal(){
	qustnrForm.reset();
	selectList.reset();
	sulmoonInsertModal.style.display="none";
}

// 설문 등록 버튼
qustnrInsertBtn.addEventListener("click",function(){
	qustnrForm.submit();
})



// 설문내용작성 폼
	let surveyContent = document.querySelector("#surveyContent");
	// 설문내용 추가 함수
	function addSurvey(){
		$.ajax({
			url : `${cPath}/school/codeGr`,
			dataType:"json",
			success: function(resp){
				let rowDiv = document.createElement('div');
				rowDiv.className= "row";
				let text = `
							<div class="col-6 mb-3">
								<h5>설문내용</h5>
								<input class="form-control" name="qustnrCn" type="text">
							</div>
							<div class="col-2">
							<h5>답변유형</h5>
								<select class="form-select" name="answerType" onchange="surveyAnswer(this)">
							`
						resp.forEach(function(i,v){
							text += `<option value="${i.qustnrAnswerCodeGr}">${i.qustnrAnswerCodeNm}</option>`
						})
						text += `
						</select>
							</div>
							<div class="col-2">
								<button class="btn btn-danger me-1 mb-1" type="button" style="margin-top:11% !important" onclick="delSurvey(this)">
								<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-minus text-900 fs-6"><line x1="5" y1="12" x2="19" y2="12"></line></svg>
								</button>
						</div>
				`
				rowDiv.innerHTML = text;
				surveyContent.appendChild(rowDiv);
				surveyAnswer(rowDiv.querySelector("[name='answerType']"));
			}
			
		})
		
		
	}
	
	// 설문지 답변유형에 따른 선택지 보여주기
	function surveyAnswer(asnwerType){
		let atValue = asnwerType.value;
		let rowDiv = asnwerType.closest('.row');
		// 선택된 답변유형
		console.log("atValue",atValue);
		
		let surveyAnswerDiv = rowDiv.querySelector('.surveyAnswer');
	    if (!surveyAnswerDiv) {
	        surveyAnswerDiv = document.createElement('div');
	        surveyAnswerDiv.className = 'surveyAnswer col-12 mb-1 d-flex';
	        rowDiv.appendChild(surveyAnswerDiv);
	    }
	    $.ajax({
			url : `${cPath}/school/codeGr/${atValue}`,
			dataType:"json",
			success:function(resp){
			console.log("resp",resp);
			let txt="";
			if(resp.length==0){
				for(var i =0; i<5; i++){
					txt+=`
					<div style="margin-top:1%;">
					<span class="number" >${i+1}.</span>
					</div>
					<div class="form-check form-check-inline" style="padding-right:3%;">
					<input class="form-control"  type="hidden" name="qustnrAnswerOrdr" value="${i+1}" />
					<input class="form-control"  type="text" name="qustnrAnswerCn" value="" />
					</div>
					`
				}
			}else{
				resp.forEach(function(i,v){
					txt+=`
					<div style="margin-top:1%;">
					<span class="number" >${v+1}.</span>
					</div>
					<div class="form-check form-check-inline" style="padding-right:3%;">
					<input class="form-control"  type="hidden" name="qustnrAnswerCn" value="${i.qustnrAnswerCn}" />
						<div>${i.qustnrAnswerCn}</div>
					</div>
					`
				})
			}
				surveyAnswerDiv.innerHTML = txt;
			}
		})
		
	}
//<input class="form-control"  type="hidden" name="qustnrAnswerOrdr" value="${v+1}" />
//<input class="form-control"  type="text" name="qustnrAnswerCn" value="${i.qustnrAnswerCn}" />

	// 설문 내용 삭제 함수
	function delSurvey(delBtn){
		let parentDiv = delBtn.closest('.row');
		parentDiv.remove();
	}