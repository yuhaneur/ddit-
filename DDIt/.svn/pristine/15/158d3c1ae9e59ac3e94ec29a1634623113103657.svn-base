<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.item.dao.ItemDAO">
<resultMap type="ItemVO" id="itemMap" autoMapping="true">
	<association property="itemLike" javaType="ItemLikeVO" autoMapping="true"/>
	<association property="itemCmmn" javaType="CmmnCodeVO" autoMapping="true"/>
</resultMap>
<select id="selectItemList" resultMap="itemMap">
	 WITH LVIEW AS(
	    SELECT
		    ITEM_CODE,
		    COUNT(*) CNT
	    FROM ITEM_LIKE
	    WHERE ITEM_LIKE_DL='N'
	    GROUP BY ITEM_CODE
	    ),
	MYLIKE AS(
	    SELECT
		    ITEM_LIKE_CODE,
		    ITEM_CODE,
		    USER_ID,
		    ITEM_LIKE_DL
	    FROM ITEM_LIKE
	    WHERE USER_ID = #{userId}
	    AND ITEM_LIKE_DL = 'N'
	    ),
    MYITEM AS(
        SELECT
            USER_ID,
            ITEM_CODE
        FROM
            ITEM_PURCHASE
        WHERE ITEM_PURCHASE.USER_ID = #{userId}
        UNION ALL
        SELECT
            ADDRSE_USER_ID AS USER_ID,
            ITEM_CODE
        FROM
            ITEM_GIFT
        WHERE ITEM_GIFT.ADDRSE_USER_ID = #{userId}
    )
	SELECT
	    ITEM.ITEM_CODE,
	    ITEM_CTGRY,
	    ITEM_NM,
	    ITEM_EFFECT,
	    ITEM_PC,
	    ITEM_RGS_DE,
	    ITEM_END_DE,
	    ITEM_DELETE_AT,
	    NVL(CNT,0) LIKE_CNT,
	    ITEM_LIKE_CODE,
        DECODE(MYITEM.ITEM_CODE, NULL, 'N', 'Y') AS ITEM_MYITEM,
        CMMN_CODE_NAME
	FROM ITEM LEFT OUTER JOIN LVIEW ON (ITEM.ITEM_CODE = LVIEW.ITEM_CODE)
	LEFT OUTER JOIN MYLIKE ON (ITEM.ITEM_CODE = MYLIKE.ITEM_CODE)
    LEFT OUTER JOIN MYITEM ON (ITEM.ITEM_CODE = MYITEM.ITEM_CODE)
    LEFT OUTER JOIN (SELECT 
	                     CMMN_CODE,
	                     CMMN_CODE_NAME
	                 FROM CMMN_CODE
	                 WHERE CMMN_CODE_GR = 'I002') CMMN ON(ITEM.ITEM_CTGRY = CMMN.CMMN_CODE)
    WHERE ITEM_DELETE_AT = 'N'
    <trim prefix="AND">
    <if test="ctgry neq 0" >
    ITEM_CTGRY = ${ctgry}
    </if>
    </trim>
</select>

<select id="selectItemCmmnList" resultType="CmmnCodeVO">
	SELECT
	    CMMN_CODE,
	    CMMN_CODE_GR,
	    CMMN_CODE_NAME
	FROM
	    CMMN_CODE
	WHERE CMMN_CODE_GR = 'I002'
</select>

<select id="selectItem" resultMap="itemMap">
	WITH LVIEW AS(
		SELECT
	    ITEM_CODE,
	    COUNT(*) CNT
	    FROM ITEM_LIKE
	    WHERE ITEM_LIKE_DL='N'
	    GROUP BY ITEM_CODE
		),
	MYLIKE AS(
	    SELECT
	    ITEM_LIKE_CODE,
	    ITEM_CODE,
	    USER_ID
	    FROM ITEM_LIKE
	    WHERE USER_ID = #{userId}
	    )
	SELECT
	    ITEM.ITEM_CODE,
	    ITEM_CTGRY,
	    ITEM_NM,
	    ITEM_EFFECT,
	    ITEM_PC,
	    ITEM_RGS_DE,
	    ITEM_END_DE,
	    ITEM_DELETE_AT,
	    NVL(CNT,0) LIKE_CNT,
	    ITEM_LIKE_CODE
	FROM ITEM LEFT OUTER JOIN LVIEW ON (ITEM.ITEM_CODE = LVIEW.ITEM_CODE)
	LEFT OUTER JOIN MYLIKE ON (ITEM.ITEM_CODE = MYLIKE.ITEM_CODE)
	WHERE ITEM.ITEM_CODE = #{itemCode}
</select>


<insert id="insertItem" parameterType="ItemVO">
	<selectKey order="BEFORE" resultType="string" keyProperty="itemCode">
		SELECT 'ITEM' || 
		TO_NUMBER(SUBSTR(MAX(ITEM_CODE), 5)+1)
		FROM ITEM
	</selectKey>
	INSERT INTO ITEM (
	    ITEM_CODE,
	    ITEM_CTGRY,
	    ITEM_NM,
	    ITEM_EFFECT,
	    ITEM_PC,
	    ITEM_RGS_DE,
	    ITEM_END_DE,
	    ITEM_DELETE_AT
	) VALUES (
	    #{itemCode},
	    #{itemCtgry},
	    #{itemNm},
	    #{itemEffect},
	    #{itemPc},
	    #{itemRgsDe},
	    #{itemEndDe},
	    #{itemDeleteAt}
	)
</insert>
<update id="updateItem" parameterType="ItemVO">
	UPDATE ITEM SET
		ITEM_CTGRY = #{itemCtgry},
		ITEM_NM = #{itemNm},
		ITEM_EFFECT = #{itemEffect},
		ITEM_PC = #{itemPc},
		ITEM_RGS_DE = #{itemRgsDe},
		ITEM_END_DE = #{itemEndDe},
		ITEM_DELETE_AT = #{itemDeleteAt}
	WHERE ITEM_CODE = #{itemCode}
</update>

<delete id="deleteItem">
	UPDATE ITEM SET
		ITEM_DELETE_AT = 'Y'
	WHERE ITEM_CODE = #{itemCode}
</delete>

</mapper>