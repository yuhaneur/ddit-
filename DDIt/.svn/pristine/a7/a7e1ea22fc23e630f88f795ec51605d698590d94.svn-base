package kr.or.ddit.school.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.edcCrse.service.EdcCrseService;
import kr.or.ddit.school.service.SchoolService;
import kr.or.ddit.teacher.service.TeacherService;
import kr.or.ddit.vo.ClassVO;
import kr.or.ddit.vo.EdcCrseVO;
import kr.or.ddit.vo.LectureRoomVO;
import kr.or.ddit.vo.ScheduleVO;
import kr.or.ddit.vo.SjManagerVO;
import kr.or.ddit.vo.SjMapping;
import kr.or.ddit.vo.SjVO;
import kr.or.ddit.vo.TeacherVO;

@Controller
@RequestMapping("/school")
public class SchoolController {
	@Autowired
	private EdcCrseService edcCrseService;
	
	@Autowired
	private TeacherService teacherService;
	
	@Autowired
	private SchoolService schoolService;
	// 클래스화면 메인
	@GetMapping("{classCode}")
	public String studentSchoolMain(Model model,@PathVariable String classCode) {
		ClassVO classVO = schoolService.selectClass(classCode);
		model.addAttribute("classVO", classVO);
		return "school/studentSchoolMain";
	}
	@GetMapping("schedule/{classInfo}")
	@ResponseBody
	public List<ScheduleVO> selectScheduleList(@PathVariable String classInfo) {
		List<ScheduleVO> scheduleList = new ArrayList<ScheduleVO>();
		scheduleList = schoolService.selectScheduleList(classInfo);
		return scheduleList;
	}
	
	//관리자 클래스 리스트
	@GetMapping("classList")
	public String classList(Model model) {
		List<ClassVO> classList =  schoolService.selectClassList();
		model.addAttribute("classList", classList);
		return "school/classList";
	}
	//관리자 클래스 등록화면폼
	@GetMapping("classInsert")
	public String insertClass(Model model) {
		List<LectureRoomVO> lectureRoomList = schoolService.selectLectureRoomList();
		List<EdcCrseVO> edcCrseList= edcCrseService.retrieveEdcCrseList();
		List<TeacherVO> teacherList = teacherService.retrieveTeacherList();
		model.addAttribute("lectureRoomList", lectureRoomList);
		model.addAttribute("edcCrseList", edcCrseList);
		model.addAttribute("teacherList", teacherList);
		return "school/classInsert";
	}
	//관리자 클래스 등록
	@PostMapping(value =  "classInsert",consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public Map<String, String> classInsert(@RequestBody ClassVO classVO){
		Map<String, String> resultMap= new HashMap<String, String>();
		int cnt = schoolService.insertClass(classVO);
		if(cnt>0) {
			resultMap.put("result", "ok");
		}else {
			resultMap.put("result", "fail");
		}
		return resultMap;
	}
	// 클래스 상세보기
	@GetMapping("classDetail/{classCode}")
	public String classDetail(@PathVariable String classCode, Model model ) {
		ClassVO classVO = schoolService.selectClass(classCode); 
		model.addAttribute("classVO", classVO);
		return "school/classDetail";
	}
	// 클래스에 등록할 선생님 리스트 
	@GetMapping( value = "teachList", produces = MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public Map<String, Object> teachList(@RequestParam long sjNo,@RequestParam String edcCrseCode ){
		SjManagerVO sjManagerVO = new SjManagerVO();
		sjManagerVO.setEdcCrseCode(edcCrseCode);
		sjManagerVO.setSjNo(sjNo);
		Map<String, Object> resultMap= new HashMap<String, Object>();
		List<SjVO> teachList = schoolService.selectClassInteacher(sjManagerVO);
		resultMap.put("teachList", teachList);
		return resultMap;
	}
	
	// 클래스에 담당과목 선생님 저장
	@PostMapping( value = "teachInsert")
	public String teachInsert(@ModelAttribute SjMapping sjMapping,@RequestParam String mnOrAt){
		String classCode = sjMapping.getClassCode();
		int cnt = schoolService.insertClassInteacher(sjMapping,mnOrAt);
		ScheduleVO scheduleVO = new ScheduleVO();
		scheduleVO.setClassCode(classCode);
		scheduleVO.setSjNo(sjMapping.getSjNo());
		scheduleVO.setUserId(sjMapping.getUserId());
		TeacherVO teacher = teacherService.selectTeacher(sjMapping.getUserId());
		scheduleVO.setTeacherName(teacher.getTeacherName());
		cnt += schoolService.updateSchedule(scheduleVO);
		
		if(cnt>1) {
			return "redirect:classDetail/"+classCode;
		}else {
			return "redirect:classDetail/"+classCode;
		}
	}
	
	//수업화면
	@GetMapping("class")
	public String teaching() {
		return "school/teaching";
	}
	
	// 설문리스트 화면
	@GetMapping("sulmoon")
	public String sulmoon() {
		return "school/sulmoon";
	}
	
	// 설문등록화면
	@GetMapping("sulmoonInsert")
	public String sulmoonInsert() {
		return "school/sulmoonInsert";
	}
	
	// 설문 제출 화면
	@GetMapping("sulmoonDetail")
	public String sulmoonDetail() {
		return "school/sulmoonDetail";
	}
	
	
	
}
